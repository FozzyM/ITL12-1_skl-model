import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
url = 'https://raw.githubusercontent.com/FozzyM/ITL12-1_skl-model/master/ITL12-1.csv'
data = pd.read_csv(url, decimal=',', sep=';', header=None, engine='c')

X = data.drop([0],axis=1)
y = data[0]

from sklearn.linear_model import LinearRegression
# X = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])
# y = 1 * x_0 + 2 * x_1 + 3
# y = np.dot(X, np.array([1, 2])) + 3
reg = LinearRegression().fit(X, y)
#reg.score(X, y)
#reg.coef_
#reg.intercept_ 
#reg.predict(np.array([[5, 0]]))
DATA=[]
it=0
for i in range(0, 15, 1):
        for k in range(-600, 1000, 10):
                fit_out = reg.predict(np.array([[i, k]]))
                fit_out = fit_out[0]
                DATA.append([i,k,fit_out])
                it=it+1
DATAFRAME = pd.DataFrame(DATA, columns = ['Anode current (A)' , 'Grid voltage (V)', 'Anode voltage (kV)'])   
DATAFRAME = DATAFRAME.astype('float')
DATAFRAME.dtypes

conv_arr= DATAFRAME.values

X = np.delete(conv_arr,[1,2],axis=1) 
Y = np.delete(conv_arr,[0,2],axis=1) 
Z = np.delete(conv_arr,[0,1],axis=1) 

X = X.flatten() 
Y = Y.flatten()
Z = Z.flatten()

plt.rcParams['figure.dpi']=120
plt.style.use('default')

fig = plt.figure()
ax = fig.gca(projection='3d')

ax.plot_trisurf(X, Y, Z, linewidth=0.2, antialiased=True, cmap=plt.cm.CMRmap)

plt.show()
